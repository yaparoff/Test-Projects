import R from 'ramda'

export const getPhoneById = (state, id) => R.prop(id, state.phones)

export const getPhones = state => {
    // contains определяет есть ли строка в подстроке
    const applySearch = item => R.contains(
        // проверяем соответствует ли значение, которое мы ищем. 
        // Находиться ли это значение как подстрока в строке name этого элемента
        state.phonesPage.search, // то что мы хотим проверить
        R.prop('name', item) 
    )
    const phones = R.compose(
        R.filter(applySearch),
        R.map(id => getPhoneById(state, id))
    )(state.phonesPage.ids)  // вызываем метод на id страницы
    return phones
    // const phones = R.map(id => getPhoneById(state, id), state.phonesPage.ids)
    // return phones 
}

export const getRenderedPhonesLenght = state => R.length(state.phonesPage.ids)

// вернет длину массива
export const getTotalBasketCount = state => R.length(state.basket)

export const getTotalBasketPrice = state => {
    const totalPrice = R.compose(
        // проходимся по каждому id, который леижит в basket. И вызываем метод 
        R.sum,
        R.pluck('price'),
        R.map(id => getPhoneById(state, id))
    )(state.basket)

    return totalPrice
}