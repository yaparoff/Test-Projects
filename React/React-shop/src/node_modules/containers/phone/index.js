import React, {Component} from 'react'
import {connect} from 'react-redux'
import R from 'ramda'
import {Link} from 'react-router'

import {fetchPhoneById, addPhoneToBasket} from 'actions'
import {getPhoneById} from 'selectors'
import BasketCart from 'components/basketCart'

class Phone extends Component {
    componentDidMount() {
        this.props.fetchPhoneById(this.props.params.id)
    }

    renderFields() {
        // получаем phone из объекта props
        const {phone} = this.props
        // из объекта телефона хотим получить только нужные нам поля
        // а потом превретить этот объект в массив, в к-ром можем вывести обычным map

        // в переменную получаем необходимые поля с помощью метода compose 
        // compose нужен чтобы несколько ф-ций комбинировать между собой
        // этот метод вызываем на телефон и пишем методы, какие хотим с ним сделать

        const columnFields = R.compose(
            // превращаем объект в массив массивов
            R.toPairs,
            // берем массив необходимых полей
            R.pick([
                'cpu',
                'camera',
                'size',
                'weight',
                'display',
                'battery',
                'memory'
            ])
        )(phone)
        return columnFields.map(([key, value]) => (
            <div className='column' key={key}>
                <div className="ab-details-title">
                    <p>{key}</p>
                </div>
                <div className="ab-details-info">
                    {value}
                </div>
            </div> 
        ))
    }

    renderContent() {
        const {phone} = this.props
        return (
            <div className="thumbnail">
                <div className="row">
                    <div className="col-md-6">
                        <img 
                            src={phone.image} 
                            alt={phone.name} 
                            className="img-thumbnail"
                        />
                    </div>
                    <div className="col-md-6">
                        {this.renderFields()}
                    </div>
                </div>
                <div className="caption-full">
                    <h4 className="pull-right">${phone.price}</h4>
                    <h4>{phone.name}</h4>
                    <p>{phone.description}</p>
                </div>
            </div>
        )
    }
    renderSidebar() {
        const {phone, addPhoneToBasket} = this.props
        return (
            <div>
                <p className="lead">Quick shop</p>
                <BasketCart />
                <div className="form-group">
                    <h1>{phone.name}</h1>
                    <h2>${phone.price}</h2>
                </div>
                <Link 
                    to='/' 
                    className='btn btn-info btn-block'
                >
                    Back to store
                </Link>
                <button 
                    type='button'
                    className="btn btn-success btn-block"
                    onClick={() => addPhoneToBasket(phone.id)}
                >
                    Add to cart
                </button>
            </div>
        )
    }
    render() {
        console.log('phone', this.props.phone)
        // деструктурируем phone
        const {phone} = this.props
        return (
            <div className="view-container">
                <div className="container">
                    <div className="row">
                        <div className="col-md-9">
                            {/* renderContent отрендерится когда phone не будет undefined */}
                            {phone && this.renderContent()}
                        </div>
                        <div className="col-md-3">
                            {phone && this.renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

const mapStateToProps = state => ({
    phone: getPhoneById(state, state.phonePage.id)
})
const mapDispatchToProps = {
    fetchPhoneById,
    addPhoneToBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Phone)